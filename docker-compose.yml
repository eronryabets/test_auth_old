version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"
    command:
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --api.insecure=true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - web

  django-auth:
    build: .
    container_name: django-auth
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`auth.localhost`)"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASES_USER=${DATABASES_USER}
      - DATABASES_PASSWORD=${DATABASES_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
    depends_on:
      - db
    networks:
      - web

  db:
    image: postgres:15.2  # Образ PostgreSQL
    container_name: sr_postgres
    ports:
      - "5433:5432"    # На хосте порт 5433, в контейнере стандартный 5432
    environment:
      POSTGRES_USER: ${DATABASES_USER}  # Пользователь для базы данных
      POSTGRES_PASSWORD: ${DATABASES_PASSWORD}  # Пароль для базы данных
      POSTGRES_DB: ${DATABASE_NAME}  # Имя базы данных
    volumes:
      - db-data:/var/lib/postgresql/data  # Для сохранения данных базы
    networks:
      - web  # Подключаем базу данных к той же сети

networks:
  web:
    driver: bridge  # Локальная сеть для контейнеров

volumes:
  db-data:
